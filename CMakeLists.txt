cmake_minimum_required(VERSION 2.8)
cmake_policy(SET CMP0015 NEW)

#define the SHARED_LIBRARY to generate shared library
if(SHARED_LIBRARY)
    message("build shared library")
    set(lib_status SHARED)
	add_definitions(-DDLL_LIBRARY)
else()
	message("build static library")
    set(lib_status STATIC)
endif()

#check the system type
if(UNIX)
    add_definitions(-DUNIX)
	#find_package(OpenCV PATHS "/home/fshen/Install_samuel/OpenCV/OpenCV-2.4.2/Debug/share/OpenCV" NO_DEFAULT_PATH)
	find_package(OpenCV PATHS "/home/fshen/samuel/project_self/bow-opencv/opencv/build" NO_DEFAULT_PATH)
elseif(WIN32)
    add_definitions(-DWIN32)
	find_package(OpenCV PATHS "D:/software/OpenCV/OpenCV-2.3.0/build"  NO_DEFAULT_PATH)
	#include("D:/software/OpenCV/OpenCV-2.3.0/build/OpenCVConfig.cmake")
else()
    message("this library only support on windows and unix")
	return()	
endif()
message("\n------------------------------------")
message("The OpenCV path is as follow:")
message(${OpenCV_LIB_DIR})
message("------------------------------------\n")
message("path\n")
#set(ENV{PATH} "/F/Samuel/library_samuel/common/bin/")
message($ENV{PATH})

set(EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR}/bin)
set(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR}/bin)

include_directories(./common/inc)
link_directories(./common/lib/)

add_subdirectory(modules)
